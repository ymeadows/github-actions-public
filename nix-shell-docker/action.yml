name: Build Nix-Shell Docker

inputs:
  tag-prefix:
    default: v
    description: Prefix used for the version

outputs:
  new-tag:
    description: The new tag generated for the push
    value: ${{steps.increment-version.outputs.new-tag}}

runs:
  using: composite
  steps:
  - name: Increment Version
    id: increment-version
    uses: ymeadows/github-actions-public/tag-next-version@v0
    with:
      prefix: ${{ inputs.tag-prefix }}

  - name: Prepare Nix
    env:
      path_nixpkgs: .config/nixpkgs
      path_confignix: $path_nixpkgs/config.nix
    shell: bash
    run: |
      mkdir -p ~/.config/nixpkgs
      echo "{ allowUnfree = true; }" > ~/.config/nixpkgs/config.nix

  - name: Install Nix
    env:
      USER: runner
    uses: cachix/install-nix-action@v21
    with:
      nix_path: nixpkgs=channel:nixos-unstable

  - name: Setup Cachix
    uses: cachix/cachix-action@v12
    with:
      name: ymeadows-build-tools
      extraPullNames: nix-community

  - name: Export nix-shell
    shell: bash
    run: nix develop -c env | grep -v '\$out' | grep '=' | tee -a $GITHUB_ENV

  - name: Build and Scan
    shell: bash
    run: |
      set -x
      nix build
      gzip --decompress --stdout $(readlink result) > image.tar
      trivy image --exit-code 1 --ignore-unfixed --severity CRITICAL,HIGH --input image.tar --security-checks vuln
