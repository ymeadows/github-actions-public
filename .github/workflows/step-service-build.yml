# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build And Push Step Service

on:
  workflow_call:
    inputs:
      epoch:
        required: false
        default: 1
        description: 'The major version number of the step-service.'
        type: number
      repo-name:
        required: false
        description: 'The name of the repository.'
        type: string
      python-version:
        required: false
        description: 'The version of python used in build.'
        default: '3.10'
        type: string
    secrets:
      gcp-credentials:
        required: true
        description: 'The path to the GCP credentials file.'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '${{ inputs.python-version }}'
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 app --exclude __pycache__ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 app --exclude __pycache__ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Authenticate to Google Cloud
      id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.gcp-credentials }}'
    - name: Setup Google Cloud
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: 't0-prod'
    - name: Setup Docker
      run: |-
        gcloud --quiet auth configure-docker
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: "v0.9.1"
    - id: docker-name-step
      name: 'Derive Docker Name'
      uses: 'ymeadows/github-actions-public/.github/actions/derive-docker-name@main'
      with:
        repo-name: ${{ inputs.repo-name }}
    - name: Build Docker Image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: false
        pull: true
        load: true
        tags: gcr.io/t0-saas/${{ steps.docker-name-step.outputs.docker-name }}:${{ inputs.epoch }}.${{ github.run_number }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Default Trivy configuration
      id: trivy-default-configuration
      run: |
        echo "dirs-to-ignore=/opt/bitnami/python/lib/python${{ inputs.python-version }}/site-packages" >> $GITHUB_OUTPUT
    - name: Load Trivy configuration
      id: trivy-configuration
      run: |
        if [ -f scan-files-to-ignore.txt ]; then echo "files-to-ignore=$(cat scan-files-to-ignore.txt)" >> $GITHUB_OUTPUT; fi
        if [ -f scan-dirs-to-ignore.txt ]; then echo "dirs-to-ignore=$(cat scan-dirs-to-ignore.txt)" >> $GITHUB_OUTPUT; fi
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'gcr.io/t0-saas/${{ steps.docker-name-step.outputs.docker-name }}:${{ inputs.epoch }}.${{ github.run_number }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        skip-files: ${{ steps.trivy-configuration.outputs.files-to-ignore }}
        skip-dirs: ${{ steps.trivy-default-configuration.outputs.dirs-to-ignore }},${{ steps.trivy-configuration.outputs.dirs-to-ignore }}
    - name: Push Docker Image
      id: docker-push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: |
          gcr.io/t0-saas/${{ steps.docker-name-step.outputs.docker-name }}:${{ inputs.epoch }}.${{ github.run_number }}
          gcr.io/t0-saas/${{ steps.docker-name-step.outputs.docker-name }}:${{ github.sha }}
          gcr.io/t0-saas/${{ steps.docker-name-step.outputs.docker-name }}:latest
          gcr.io/t0-prod/${{ steps.docker-name-step.outputs.docker-name }}:${{ github.sha }}
          gcr.io/t0-prod/${{ steps.docker-name-step.outputs.docker-name }}:latest
          gcr.io/t0-prod/${{ steps.docker-name-step.outputs.docker-name }}:${{ inputs.epoch }}.${{ github.run_number }}
          gcr.io/t0-qa-282516/${{ steps.docker-name-step.outputs.docker-name }}:${{ github.sha }}
          gcr.io/t0-qa-282516/${{ steps.docker-name-step.outputs.docker-name }}:latest
          gcr.io/t0-qa-282516/${{ steps.docker-name-step.outputs.docker-name }}:${{ inputs.epoch }}.${{ github.run_number }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Tag Git
      uses: hole19/git-tag-action@master
      env:
        TAG: v${{ inputs.epoch }}.${{ github.run_number }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
          tag_name: v${{ inputs.epoch }}.${{ github.run_number }}
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
