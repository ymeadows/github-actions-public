# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Validate PR
on:
  workflow_call:
    inputs:
      epoch:
        required: false
        default: 1
        description: 'The major version number of the step-service.'
        type: number
      repo-name:
        required: false
        description: 'The name of the repository.'
        type: string
      python-version:
        required: false
        description: 'The version of python used in the build.'
        default: '3.10'
        type: string
    secrets:
      gcp-credentials:
        required: false
        description: 'The path to the GCP credentials file.'
      github-token:
        required: false
        description: 'The GitHub token.'
      sonar-token:
        required: false
        description: 'The SonarCloud token.'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '${{ inputs.python-version }}'
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 app --exclude __pycache__ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 app --exclude __pycache__ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      if: ${{ github.actor != 'dependabot[bot]' }}
      env:
        GITHUB_TOKEN: ${{ secrets.github-token }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.sonar-token }}
    - name: Authenticate to Google Cloud
      id: 'auth'
      if: ${{ github.actor != 'dependabot[bot]' }}
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.gcp-credentials }}'
    - name: Setup Google Cloud
      if: ${{ github.actor != 'dependabot[bot]' }}
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: 't0-prod'
    - name: Setup Docker
      if: ${{ github.actor != 'dependabot[bot]' }}
      run: |-
        gcloud --quiet auth configure-docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      if: ${{ github.actor != 'dependabot[bot]' }}
    - id: docker-name-step
      name: 'Derive Docker Name'
      uses: 'ymeadows/github-actions-public/.github/actions/derive-docker-name@main'
      with:
        repo-name: ${{ inputs.repo-name }}
    - name: Build Docker Image
      uses: docker/build-push-action@v3
      if: ${{ github.actor != 'dependabot[bot]' }}
      with:
        context: .
        push: false
        pull: true
        load: true
        tags: gcr.io/t0-saas/${{ steps.docker-name-step.outputs.docker-name }}:pr-test-${{ inputs.epoch }}.${{ github.run_number }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Load Trivy configuration
      id: trivy-configuration
      run: |
        if [ -f scan-files-to-ignore.txt ]; then echo "::set-output name=files-to-ignore::$(cat scan-files-to-ignore.txt)"; fi
        if [ -f scan-dirs-to-ignore.txt ]; then echo "::set-output name=dirs-to-ignore::$(cat scan-dirs-to-ignore.txt)"; fi
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      if: ${{ github.actor != 'dependabot[bot]' }}
      with:
        image-ref: 'gcr.io/t0-saas/${{ steps.docker-name-step.outputs.docker-name }}:pr-test-${{ inputs.epoch }}.${{ github.run_number }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
        skip-files: ${{ steps.trivy-configuration.outputs.files-to-ignore }}
        skip-dirs: ${{ steps.trivy-configuration.outputs.dirs-to-ignore }}
