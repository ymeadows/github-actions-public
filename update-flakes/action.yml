name: Update flake.lock

inputs:
  update_app_id:
    description: Key for the update app; try secrets.DEP_UPDATE_ID
    required: true
  update_app_key:
    description: Key for the update app; try secrets.DEP_UPDATE_KEY
    required: true
  packages:
    description: 'A space-separated list of inputs to update. Leave empty to update all inputs.'
    required: false
    default: ''
  blacklist:
    description: 'A list of dependencies, comma separated, to skip from updating.'
    required: false
    default: ''
  version:
    description: "How to handle package versions; c.f. the nix-update tool"
    required: false
    default: ''
runs:
  using: composite
  steps:
  - name: Install Nix
    uses: cachix/install-nix-action@v30
    with:
      extra_nix_config: |
        access-tokens = github.com=${{ github.token }}
  - name: Install tools
    uses: yaxitech/nix-install-pkgs-action@v3
    with:
      packages: "nix-update,jq"
      inputs-from: nixpkgs
  - name: Run nix-update
    run: $GITHUB_ACTION_PATH/nix-update.sh
    shell: bash
    env:
      PACKAGES: ${{ inputs.packages }}
      BLACKLIST: ${{ inputs.blacklist }}
      VERSION: ${{ inputs.version }}
  - name: Get Updater Token
    uses: tibdex/github-app-token@v1
    id: generate-token
    with:
      app_id: ${{ inputs.update_app_id}}
      private_key: ${{inputs.update_app_key}}
  - name: Update flake.lock
    uses: DeterminateSystems/update-flake-lock@v24 # Open PR against upstream
    with:
      token: ${{ steps.generate-token.outputs.token }}
      pr-title: "Update flake.lock" # Title of PR to be created
      pr-labels: |                  # Labels to be set on the PR
        dependencies
        automated
      pr-body: |
        Automated changes by the [update-flake-lock](https://github.com/DeterminateSystems/update-flake-lock) GitHub Action.
        ```
        {{ env.GIT_COMMIT_MESSAGE }}
        ```
  -  name: Update versions
